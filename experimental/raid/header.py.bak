# DFF -- An Open Source Digital Forensics Framework
# Copyright (C) 2009-2011 ArxSys
# This program is free software, distributed under the terms of
# the GNU General Public License Version 2. See the LICENSE file
# at the top of the source tree.
#  
# See http://www.digital-forensic.org for more information about this
# project. Please do not directly contact any of the maintainers of
# DFF for assistance; the project provides a web site, mailing lists
# and IRC channels for your use.
# 
# Author(s):
#  Romain Bertholon <rbe@digital-forensic.org>
# 

from datetime import datetime
from api.types.libtypes import VList
from decoder import *
import unicodedata



MD_SUPERBLOCK = {
    "Length":[0x0, 0x4, UINT32_T],
    "Reserved":[0x4, 0x4, STRING_T],
    "RecordNumber":[0x8, 0x4, UINT32_T],
    "TimeGenerated":[12, 0x4, UINT32_T],
    "TimeWritten":[16, 0x4, UINT32_T],
    "EventID":[20, 0x4, UINT32_T],
    "EventType":[24, 0x2, UINT16_T],
    "NumStrings":[26, 0x2, UINT16_T],
    "EventCategory":[28, 0x2, UINT16_T],
    "ReservedFlags":[30, 0x2, UINT16_T],
    "ClosingRecordNumber":[32, 0x4, UINT32_T],
    "StringOffset":[36, 0x4, UINT32_T],
    "UserSidLength":[40, 0x4, UINT32_T],
    "UserSidOffset":[44, 0x4, UINT32_T],
    "DataLength":[48, 0x4, UINT32_T],
    "DataOffset":[52, 0x4, UINT32_T]


	#
	 # Constant generic information
	 #
	__u32 md_magic;		#  0 MD identifier 			      #
	__u32 major_version;	#  1 major version to which the set conforms #
	__u32 minor_version;	#  2 minor version ...			      #
	__u32 patch_version;	#  3 patchlevel version ...		      #
	__u32 gvalid_words;	#  4 Number of used words in this section    #
	__u32 set_uuid0;	#  5 Raid set identifier		      #
	__u32 ctime;		#  6 Creation time			      #
	__u32 level;		#  7 Raid personality			      #
	__u32 size;		#  8 Apparent size of each individual disk   #
	__u32 nr_disks;		#  9 total disks in the raid set	      #
	__u32 raid_disks;	# 10 disks in a fully functional raid set    #
	__u32 md_minor;		# 11 preferred MD minor device number	      #
	__u32 not_persistent;	# 12 does it have a persistent superblock    #
	__u32 set_uuid1;	# 13 Raid set identifier #2		      #
	__u32 set_uuid2;	# 14 Raid set identifier #3		      #
	__u32 set_uuid3;	# 15 Raid set identifier #4		      #
	__u32 gstate_creserved[MD_SB_GENERIC_CONSTANT_WORDS - 16];

	#
	 # Generic state information
	 #
	__u32 utime;		#  0 Superblock update time		      #
	__u32 state;		#  1 State bits (clean, ...)		      #
	__u32 active_disks;	#  2 Number of currently active disks	      #
	__u32 working_disks;	#  3 Number of working disks		      #
	__u32 failed_disks;	#  4 Number of failed disks		      #
	__u32 spare_disks;	#  5 Number of spare disks		      #
	__u32 sb_csum;		#  6 checksum of the whole superblock        #
#if  __BYTE_ORDER ==  __BIG_ENDIAN
	__u32 events_hi;	#  7 high-order of superblock update count   #
	__u32 events_lo;	#  8 low-order of superblock update count    #
	__u32 cp_events_hi;	#  9 high-order of checkpoint update count   #
	__u32 cp_events_lo;	# 10 low-order of checkpoint update count    #
#else
	__u32 events_lo;	#  7 low-order of superblock update count    #
	__u32 events_hi;	#  8 high-order of superblock update count   #
	__u32 cp_events_lo;	#  9 low-order of checkpoint update count    #
	__u32 cp_events_hi;	# 10 high-order of checkpoint update count   #
#endif
	__u32 recovery_cp;	# 11 recovery checkpoint sector count	      #
	# There are only valid for minor_version > 90 #
	__u64 reshape_position;	# 12,13 next address in array-space for reshape #
	__u32 new_level;	# 14 new level we are reshaping to	      #
	__u32 delta_disks;	# 15 change in number of raid_disks	      #
	__u32 new_layout;	# 16 new layout			      #
	__u32 new_chunk;	# 17 new chunk size (bytes)		      #
	__u32 gstate_sreserved[MD_SB_GENERIC_STATE_WORDS - 18];

	#
	 # Personality information
	 #
	__u32 layout;		#  0 the array's physical layout	      #
	__u32 chunk_size;	#  1 chunk size in bytes		      #
	__u32 root_pv;		#  2 LV root PV #
	__u32 root_block;	#  3 LV root block #
	__u32 pstate_reserved[MD_SB_PERSONALITY_WORDS - 4];

	#
	 # Disks information
	 #
	mdp_disk_t disks[MD_SB_DISKS];

	#
	 # Reserved
	 #
	__u32 reserved[MD_SB_RESERVED_WORDS];

	#
	 # Active descriptor
	 #
	mdp_disk_t this_disk;
